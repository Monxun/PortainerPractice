pipeline {
    agent any
    stages {
        stage('Checkout / Git') {
            steps {
                git 'https://github.com/night-walkers-smoothstack/aline-user-microservice.git'
                // credentialsId: 'GIT_HUB_CREDENTIALS'
            }
        }
        stage("Build & SonarQube Analysis") {
            steps {
              withSonarQubeEnv('SONARQUBE') {
                sh 'mvn -B -DskipTests clean package sonar:sonar'
                }
            }
        }
        stage('Test Application') {
            steps {
                echo '=== Testing Maven Application ==='
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Build Docker Image') {
            when {
                branch 'master'
            }
            steps {
                echo '=== Building Maven Docker Image ==='
                script {
                    app = docker.build("monxun/maven-docker-jenkins")
                }
            }
        }
        stage('Push Docker Image') {
            when {
                branch 'master'
            }
            steps {
                echo '=== Pushing Docker Image ==='
                script {
                    GIT_COMMIT_HASH = sh (script: "git log -n 1 --pretty=format:'%H'", returnStdout: true)
                    SHORT_COMMIT = "${GIT_COMMIT_HASH[0..7]}"
                    docker.withRegistry('http://REGISTRY:443') {
                        app.push("$SHORT_COMMIT")
                        app.push("latest")
                    }
                }
            }
        }
        stage('Remove Local Images') {
            steps {
                echo '=== Delete the local docker images ==='
                sh("docker rmi -f monxun/maven-docker-jenkins:latest || :")
                sh("docker rmi -f monxun/maven-docker-jenkins:$SHORT_COMMIT || :")
            }
        }
    }
}